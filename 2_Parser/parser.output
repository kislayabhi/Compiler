Terminals unused in grammar

   IF
   ELSE
   WHILE
   FOR
   STRUCT
   TYPEDEF
   OP_ASSIGN
   OP_OR
   OP_AND
   OP_NOT
   OP_EQ
   OP_NE
   OP_GT
   OP_LT
   OP_GE
   OP_LE
   OP_PLUS
   OP_MINUS
   OP_TIMES
   OP_DIVIDE
   MK_LBRACE
   MK_RBRACE
   MK_DOT
   ERROR
   RETURN


Grammar

    0 $accept: program $end

    1 program: global_decl_list

    2 global_decl_list: global_decl_list global_decl
    3                 | %empty

    4 global_decl: function_decl

    5 function_decl: return_type function_name MK_LPAREN parameter_or_type_list MK_RPAREN MK_SEMICOLON

    6 return_type: type
    7            | VOID

    8 function_name: ID

    9 parameter_or_type_list: include_comma parameter_or_type_decl
   10                       | %empty

   11 include_comma: parameter_or_type_list MK_COMMA
   12              | %empty

   13 parameter_or_type_decl: type
   14                       | variable_decl
   15                       | array_decl

   16 variable_decl: type ID

   17 array_decl: type ID array_braces array_braces_list
   18           | type ID blank_array_braces array_braces_list

   19 array_braces_list: array_braces_list array_braces
   20                  | %empty

   21 array_braces: MK_LB CONST MK_RB

   22 blank_array_braces: MK_LB MK_RB

   23 type: INT
   24     | FLOAT


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 8 16 17 18
CONST (259) 21
VOID (260) 7
INT (261) 23
FLOAT (262) 24
IF (263)
ELSE (264)
WHILE (265)
FOR (266)
STRUCT (267)
TYPEDEF (268)
OP_ASSIGN (269)
OP_OR (270)
OP_AND (271)
OP_NOT (272)
OP_EQ (273)
OP_NE (274)
OP_GT (275)
OP_LT (276)
OP_GE (277)
OP_LE (278)
OP_PLUS (279)
OP_MINUS (280)
OP_TIMES (281)
OP_DIVIDE (282)
MK_LB (283) 21 22
MK_RB (284) 21 22
MK_LPAREN (285) 5
MK_RPAREN (286) 5
MK_LBRACE (287)
MK_RBRACE (288)
MK_COMMA (289) 11
MK_SEMICOLON (290) 5
MK_DOT (291)
ERROR (292)
RETURN (293)


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
global_decl_list (41)
    on left: 2 3, on right: 1 2
global_decl (42)
    on left: 4, on right: 2
function_decl (43)
    on left: 5, on right: 4
return_type (44)
    on left: 6 7, on right: 5
function_name (45)
    on left: 8, on right: 5
parameter_or_type_list (46)
    on left: 9 10, on right: 5 11
include_comma (47)
    on left: 11 12, on right: 9
parameter_or_type_decl (48)
    on left: 13 14 15, on right: 9
variable_decl (49)
    on left: 16, on right: 14
array_decl (50)
    on left: 17 18, on right: 15
array_braces_list (51)
    on left: 19 20, on right: 17 18 19
array_braces (52)
    on left: 21, on right: 17 19
blank_array_braces (53)
    on left: 22, on right: 18
type (54)
    on left: 23 24, on right: 6 13 16 17 18


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (global_decl_list)

    program           go to state 1
    global_decl_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_decl_list .
    2 global_decl_list: global_decl_list . global_decl

    VOID   shift, and go to state 4
    INT    shift, and go to state 5
    FLOAT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    global_decl    go to state 7
    function_decl  go to state 8
    return_type    go to state 9
    type           go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    7 return_type: VOID .

    $default  reduce using rule 7 (return_type)


State 5

   23 type: INT .

    $default  reduce using rule 23 (type)


State 6

   24 type: FLOAT .

    $default  reduce using rule 24 (type)


State 7

    2 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 2 (global_decl_list)


State 8

    4 global_decl: function_decl .

    $default  reduce using rule 4 (global_decl)


State 9

    5 function_decl: return_type . function_name MK_LPAREN parameter_or_type_list MK_RPAREN MK_SEMICOLON

    ID  shift, and go to state 11

    function_name  go to state 12


State 10

    6 return_type: type .

    $default  reduce using rule 6 (return_type)


State 11

    8 function_name: ID .

    $default  reduce using rule 8 (function_name)


State 12

    5 function_decl: return_type function_name . MK_LPAREN parameter_or_type_list MK_RPAREN MK_SEMICOLON

    MK_LPAREN  shift, and go to state 13


State 13

    5 function_decl: return_type function_name MK_LPAREN . parameter_or_type_list MK_RPAREN MK_SEMICOLON

    INT       reduce using rule 12 (include_comma)
    FLOAT     reduce using rule 12 (include_comma)
    $default  reduce using rule 10 (parameter_or_type_list)

    parameter_or_type_list  go to state 14
    include_comma           go to state 15


State 14

    5 function_decl: return_type function_name MK_LPAREN parameter_or_type_list . MK_RPAREN MK_SEMICOLON
   11 include_comma: parameter_or_type_list . MK_COMMA

    MK_RPAREN  shift, and go to state 16
    MK_COMMA   shift, and go to state 17


State 15

    9 parameter_or_type_list: include_comma . parameter_or_type_decl

    INT    shift, and go to state 5
    FLOAT  shift, and go to state 6

    parameter_or_type_decl  go to state 18
    variable_decl           go to state 19
    array_decl              go to state 20
    type                    go to state 21


State 16

    5 function_decl: return_type function_name MK_LPAREN parameter_or_type_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 22


State 17

   11 include_comma: parameter_or_type_list MK_COMMA .

    $default  reduce using rule 11 (include_comma)


State 18

    9 parameter_or_type_list: include_comma parameter_or_type_decl .

    $default  reduce using rule 9 (parameter_or_type_list)


State 19

   14 parameter_or_type_decl: variable_decl .

    $default  reduce using rule 14 (parameter_or_type_decl)


State 20

   15 parameter_or_type_decl: array_decl .

    $default  reduce using rule 15 (parameter_or_type_decl)


State 21

   13 parameter_or_type_decl: type .
   16 variable_decl: type . ID
   17 array_decl: type . ID array_braces array_braces_list
   18           | type . ID blank_array_braces array_braces_list

    ID  shift, and go to state 23

    $default  reduce using rule 13 (parameter_or_type_decl)


State 22

    5 function_decl: return_type function_name MK_LPAREN parameter_or_type_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 5 (function_decl)


State 23

   16 variable_decl: type ID .
   17 array_decl: type ID . array_braces array_braces_list
   18           | type ID . blank_array_braces array_braces_list

    MK_LB  shift, and go to state 24

    $default  reduce using rule 16 (variable_decl)

    array_braces        go to state 25
    blank_array_braces  go to state 26


State 24

   21 array_braces: MK_LB . CONST MK_RB
   22 blank_array_braces: MK_LB . MK_RB

    CONST  shift, and go to state 27
    MK_RB  shift, and go to state 28


State 25

   17 array_decl: type ID array_braces . array_braces_list

    $default  reduce using rule 20 (array_braces_list)

    array_braces_list  go to state 29


State 26

   18 array_decl: type ID blank_array_braces . array_braces_list

    $default  reduce using rule 20 (array_braces_list)

    array_braces_list  go to state 30


State 27

   21 array_braces: MK_LB CONST . MK_RB

    MK_RB  shift, and go to state 31


State 28

   22 blank_array_braces: MK_LB MK_RB .

    $default  reduce using rule 22 (blank_array_braces)


State 29

   17 array_decl: type ID array_braces array_braces_list .
   19 array_braces_list: array_braces_list . array_braces

    MK_LB  shift, and go to state 32

    $default  reduce using rule 17 (array_decl)

    array_braces  go to state 33


State 30

   18 array_decl: type ID blank_array_braces array_braces_list .
   19 array_braces_list: array_braces_list . array_braces

    MK_LB  shift, and go to state 32

    $default  reduce using rule 18 (array_decl)

    array_braces  go to state 33


State 31

   21 array_braces: MK_LB CONST MK_RB .

    $default  reduce using rule 21 (array_braces)


State 32

   21 array_braces: MK_LB . CONST MK_RB

    CONST  shift, and go to state 27


State 33

   19 array_braces_list: array_braces_list array_braces .

    $default  reduce using rule 19 (array_braces_list)

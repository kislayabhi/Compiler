Terminals unused in grammar

   TYPEDEF
   ERROR
   "reduce_error"


Grammar

    0 $accept: program $end

    1 program: global_decl_list

    2 global_decl_list: global_decl_list global_decl
    3                 | MK_SEMICOLON
    4                 | %empty

    5 global_decl: function_decl MK_SEMICOLON
    6            | function_def
    7            | horz_decl_init_list MK_SEMICOLON
    8            | horz_init_list MK_SEMICOLON
    9            | function_call MK_SEMICOLON
   10            | struct_or_union_decl MK_SEMICOLON
   11            | derived_id error MK_SEMICOLON

   12 function_decl: type ID MK_LPAREN parameter_list MK_RPAREN
   13              | type ID MK_LPAREN MK_RPAREN
   14              | VOID ID MK_LPAREN parameter_list MK_RPAREN
   15              | VOID ID MK_LPAREN MK_RPAREN

   16 function_def: type ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   17             | type ID MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE
   18             | VOID ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   19             | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE

   20 struct_or_union_decl: STRUCT id MK_LBRACE struct_material_list MK_RBRACE struct_members
   21                     | STRUCT MK_LBRACE struct_material_list MK_RBRACE struct_members
   22                     | STRUCT id MK_LBRACE struct_material_list MK_RBRACE
   23                     | STRUCT MK_LBRACE struct_material_list MK_RBRACE
   24                     | STRUCT id struct_members
   25                     | STRUCT id MK_LBRACE error MK_RBRACE struct_members
   26                     | STRUCT id MK_LBRACE error MK_RBRACE

   27 struct_material_list: struct_or_union_decl MK_SEMICOLON struct_material_list
   28                     | horz_decl_init_list MK_SEMICOLON struct_material_list
   29                     | %empty

   30 struct_members: derived_id MK_COMMA struct_members
   31               | derived_id

   32 function_body: statement_list

   33 statement_list: statement_list statement
   34               | %empty

   35 statement: return_statement MK_SEMICOLON
   36          | function_call MK_SEMICOLON
   37          | control_flow
   38          | control_arguments MK_SEMICOLON
   39          | struct_or_union_decl MK_SEMICOLON
   40          | MK_SEMICOLON
   41          | derived_id error MK_SEMICOLON
   42          | control_arguments error MK_SEMICOLON

   43 control_flow: WHILE MK_LPAREN control_arguments MK_RPAREN statement
   44             | WHILE MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   45             | IF MK_LPAREN control_arguments MK_RPAREN statement
   46             | IF MK_LPAREN control_arguments MK_RPAREN statement ELSE statement
   47             | IF MK_LPAREN control_arguments MK_RPAREN statement ELSE MK_LBRACE function_body MK_RBRACE
   48             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   49             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE statement
   50             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE
   51             | FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN statement
   52             | FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   53             | IF MK_LPAREN error MK_RBRACE
   54             | FOR MK_LPAREN error MK_RBRACE
   55             | WHILE MK_LPAREN error MK_RBRACE

   56 control_arguments: expression_list_list
   57                  | horz_init_list
   58                  | horz_decl_init_list

   59 return_statement: RETURN sign CONST
   60                 | RETURN CONST
   61                 | RETURN sign id
   62                 | RETURN id
   63                 | RETURN

   64 horz_init_list: derived_id hard_assignment

   65 derived_id: id MK_DOT id
   66           | id

   67 id: ID
   68   | ID array_braces array_braces_list
   69   | ID blank_array_braces array_braces_list

   70 horz_decl_init_list: parameter_decl hard_assignment more_horz_param_list
   71                    | parameter_decl hard_assignment
   72                    | parameter_decl
   73                    | parameter_decl more_horz_param_list

   74 more_horz_param_list: MK_COMMA ID hard_assignment more_horz_param_list
   75                     | MK_COMMA ID hard_assignment
   76                     | MK_COMMA ID
   77                     | MK_COMMA ID more_horz_param_list

   78 hard_assignment: OP_ASSIGN function_call
   79                | OP_ASSIGN expression_ll_with_id

   80 expression_list_list: CONST
   81                     | CONST expression_list
   82                     | derived_id expression_list
   83                     | expression_list

   84 expression_ll_with_id: expression_list_list
   85                      | derived_id

   86 expression_list: expression expression_list
   87                | expression

   88 expression: arithmetic_units primary
   89           | arithmetic_units
   90           | arithmetic_units MK_LPAREN expression_ll_with_id MK_RPAREN
   91           | MK_LPAREN expression_ll_with_id MK_RPAREN

   92 primary: id
   93        | CONST

   94 function_call: ID MK_LPAREN MK_RPAREN
   95              | ID MK_LPAREN argument_list MK_RPAREN

   96 argument_list: argument
   97              | argument_list MK_COMMA argument

   98 argument: id
   99         | CONST

  100 parameter_list: parameter_decl
  101               | parameter_list MK_COMMA parameter_decl

  102 parameter_decl: variable_decl
  103               | array_decl

  104 variable_decl: type ID

  105 array_decl: type ID array_braces array_braces_list
  106           | type ID blank_array_braces array_braces_list

  107 array_braces_list: array_braces_list array_braces
  108                  | %empty

  109 array_braces: MK_LB CONST MK_RB
  110             | MK_LB ID MK_RB

  111 blank_array_braces: MK_LB MK_RB

  112 type: INT
  113     | FLOAT

  114 sign: OP_PLUS
  115     | OP_MINUS
  116     | OP_NOT

  117 arithmetic_units: sign
  118                 | OP_TIMES
  119                 | OP_DIVIDE
  120                 | binary_units

  121 binary_units: OP_OR
  122             | OP_AND
  123             | OP_EQ
  124             | OP_NE
  125             | OP_LT
  126             | OP_GT
  127             | OP_LE
  128             | OP_GE


Terminals, with rules where they appear

$end (0) 0
error (256) 11 25 26 41 42 53 54 55
ID (258) 12 13 14 15 16 17 18 19 67 68 69 74 75 76 77 94 95 104 105
    106 110
CONST (259) 59 60 80 81 93 99 109
VOID (260) 14 15 18 19
INT (261) 112
FLOAT (262) 113
IF (263) 45 46 47 48 49 50 53
ELSE (264) 46 47 49 50
WHILE (265) 43 44 55
FOR (266) 51 52 54
STRUCT (267) 20 21 22 23 24 25 26
TYPEDEF (268)
OP_ASSIGN (269) 78 79
OP_OR (270) 121
OP_AND (271) 122
OP_NOT (272) 116
OP_EQ (273) 123
OP_NE (274) 124
OP_GT (275) 126
OP_LT (276) 125
OP_GE (277) 128
OP_LE (278) 127
OP_PLUS (279) 114
OP_MINUS (280) 115
OP_TIMES (281) 118
OP_DIVIDE (282) 119
MK_LB (283) 109 110 111
MK_RB (284) 109 110 111
MK_LPAREN (285) 12 13 14 15 16 17 18 19 43 44 45 46 47 48 49 50 51
    52 53 54 55 90 91 94 95
MK_RPAREN (286) 12 13 14 15 16 17 18 19 43 44 45 46 47 48 49 50 51
    52 90 91 94 95
MK_LBRACE (287) 16 17 18 19 20 21 22 23 25 26 44 47 48 49 50 52
MK_RBRACE (288) 16 17 18 19 20 21 22 23 25 26 44 47 48 49 50 52 53
    54 55
MK_COMMA (289) 30 74 75 76 77 97 101
MK_SEMICOLON (290) 3 5 7 8 9 10 11 27 28 35 36 38 39 40 41 42 51 52
MK_DOT (291) 65
ERROR (292)
RETURN (293) 59 60 61 62 63
"then" (294)
"lessthanlparen" (295)
"reduce_error" (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
global_decl_list (44)
    on left: 2 3 4, on right: 1 2
global_decl (45)
    on left: 5 6 7 8 9 10 11, on right: 2
function_decl (46)
    on left: 12 13 14 15, on right: 5
function_def (47)
    on left: 16 17 18 19, on right: 6
struct_or_union_decl (48)
    on left: 20 21 22 23 24 25 26, on right: 10 27 39
struct_material_list (49)
    on left: 27 28 29, on right: 20 21 22 23 27 28
struct_members (50)
    on left: 30 31, on right: 20 21 24 25 30
function_body (51)
    on left: 32, on right: 16 17 18 19 44 47 48 49 50 52
statement_list (52)
    on left: 33 34, on right: 32 33
statement (53)
    on left: 35 36 37 38 39 40 41 42, on right: 33 43 45 46 47 49 51
control_flow (54)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55, on right: 37
control_arguments (55)
    on left: 56 57 58, on right: 38 42 43 44 45 46 47 48 49 50 51 52
return_statement (56)
    on left: 59 60 61 62 63, on right: 35
horz_init_list (57)
    on left: 64, on right: 8 57
derived_id (58)
    on left: 65 66, on right: 11 30 31 41 64 82 85
id (59)
    on left: 67 68 69, on right: 20 22 24 25 26 61 62 65 66 92 98
horz_decl_init_list (60)
    on left: 70 71 72 73, on right: 7 28 58
more_horz_param_list (61)
    on left: 74 75 76 77, on right: 70 73 74 77
hard_assignment (62)
    on left: 78 79, on right: 64 70 71 74 75
expression_list_list (63)
    on left: 80 81 82 83, on right: 56 84
expression_ll_with_id (64)
    on left: 84 85, on right: 79 90 91
expression_list (65)
    on left: 86 87, on right: 81 82 83 86
expression (66)
    on left: 88 89 90 91, on right: 86 87
primary (67)
    on left: 92 93, on right: 88
function_call (68)
    on left: 94 95, on right: 9 36 78
argument_list (69)
    on left: 96 97, on right: 95 97
argument (70)
    on left: 98 99, on right: 96 97
parameter_list (71)
    on left: 100 101, on right: 12 14 16 18 101
parameter_decl (72)
    on left: 102 103, on right: 70 71 72 73 100 101
variable_decl (73)
    on left: 104, on right: 102
array_decl (74)
    on left: 105 106, on right: 103
array_braces_list (75)
    on left: 107 108, on right: 68 69 105 106 107
array_braces (76)
    on left: 109 110, on right: 68 105 107
blank_array_braces (77)
    on left: 111, on right: 69 106
type (78)
    on left: 112 113, on right: 12 13 16 17 104 105 106
sign (79)
    on left: 114 115 116, on right: 59 61 117
arithmetic_units (80)
    on left: 117 118 119 120, on right: 88 89 90
binary_units (81)
    on left: 121 122 123 124 125 126 127 128, on right: 120


State 0

    0 $accept: . program $end

    MK_SEMICOLON  shift, and go to state 1

    $default  reduce using rule 4 (global_decl_list)

    program           go to state 2
    global_decl_list  go to state 3


State 1

    3 global_decl_list: MK_SEMICOLON .

    $default  reduce using rule 3 (global_decl_list)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: global_decl_list .
    2 global_decl_list: global_decl_list . global_decl

    ID      shift, and go to state 5
    VOID    shift, and go to state 6
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 1 (program)

    global_decl           go to state 10
    function_decl         go to state 11
    function_def          go to state 12
    struct_or_union_decl  go to state 13
    horz_init_list        go to state 14
    derived_id            go to state 15
    id                    go to state 16
    horz_decl_init_list   go to state 17
    function_call         go to state 18
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 22


State 4

    0 $accept: program $end .

    $default  accept


State 5

   67 id: ID .
   68   | ID . array_braces array_braces_list
   69   | ID . blank_array_braces array_braces_list
   94 function_call: ID . MK_LPAREN MK_RPAREN
   95              | ID . MK_LPAREN argument_list MK_RPAREN

    MK_LB      shift, and go to state 23
    MK_LPAREN  shift, and go to state 24

    $default  reduce using rule 67 (id)

    array_braces        go to state 25
    blank_array_braces  go to state 26


State 6

   14 function_decl: VOID . ID MK_LPAREN parameter_list MK_RPAREN
   15              | VOID . ID MK_LPAREN MK_RPAREN
   18 function_def: VOID . ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   19             | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE

    ID  shift, and go to state 27


State 7

  112 type: INT .

    $default  reduce using rule 112 (type)


State 8

  113 type: FLOAT .

    $default  reduce using rule 113 (type)


State 9

   20 struct_or_union_decl: STRUCT . id MK_LBRACE struct_material_list MK_RBRACE struct_members
   21                     | STRUCT . MK_LBRACE struct_material_list MK_RBRACE struct_members
   22                     | STRUCT . id MK_LBRACE struct_material_list MK_RBRACE
   23                     | STRUCT . MK_LBRACE struct_material_list MK_RBRACE
   24                     | STRUCT . id struct_members
   25                     | STRUCT . id MK_LBRACE error MK_RBRACE struct_members
   26                     | STRUCT . id MK_LBRACE error MK_RBRACE

    ID         shift, and go to state 28
    MK_LBRACE  shift, and go to state 29

    id  go to state 30


State 10

    2 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 2 (global_decl_list)


State 11

    5 global_decl: function_decl . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 31


State 12

    6 global_decl: function_def .

    $default  reduce using rule 6 (global_decl)


State 13

   10 global_decl: struct_or_union_decl . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 32


State 14

    8 global_decl: horz_init_list . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 33


State 15

   11 global_decl: derived_id . error MK_SEMICOLON
   64 horz_init_list: derived_id . hard_assignment

    error      shift, and go to state 34
    OP_ASSIGN  shift, and go to state 35

    hard_assignment  go to state 36


State 16

   65 derived_id: id . MK_DOT id
   66           | id .

    MK_DOT  shift, and go to state 37

    $default  reduce using rule 66 (derived_id)


State 17

    7 global_decl: horz_decl_init_list . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 38


State 18

    9 global_decl: function_call . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 39


State 19

   70 horz_decl_init_list: parameter_decl . hard_assignment more_horz_param_list
   71                    | parameter_decl . hard_assignment
   72                    | parameter_decl .
   73                    | parameter_decl . more_horz_param_list

    OP_ASSIGN  shift, and go to state 35
    MK_COMMA   shift, and go to state 40

    $default  reduce using rule 72 (horz_decl_init_list)

    more_horz_param_list  go to state 41
    hard_assignment       go to state 42


State 20

  102 parameter_decl: variable_decl .

    $default  reduce using rule 102 (parameter_decl)


State 21

  103 parameter_decl: array_decl .

    $default  reduce using rule 103 (parameter_decl)


State 22

   12 function_decl: type . ID MK_LPAREN parameter_list MK_RPAREN
   13              | type . ID MK_LPAREN MK_RPAREN
   16 function_def: type . ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   17             | type . ID MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE
  104 variable_decl: type . ID
  105 array_decl: type . ID array_braces array_braces_list
  106           | type . ID blank_array_braces array_braces_list

    ID  shift, and go to state 43


State 23

  109 array_braces: MK_LB . CONST MK_RB
  110             | MK_LB . ID MK_RB
  111 blank_array_braces: MK_LB . MK_RB

    ID     shift, and go to state 44
    CONST  shift, and go to state 45
    MK_RB  shift, and go to state 46


State 24

   94 function_call: ID MK_LPAREN . MK_RPAREN
   95              | ID MK_LPAREN . argument_list MK_RPAREN

    ID         shift, and go to state 28
    CONST      shift, and go to state 47
    MK_RPAREN  shift, and go to state 48

    id             go to state 49
    argument_list  go to state 50
    argument       go to state 51


State 25

   68 id: ID array_braces . array_braces_list

    $default  reduce using rule 108 (array_braces_list)

    array_braces_list  go to state 52


State 26

   69 id: ID blank_array_braces . array_braces_list

    $default  reduce using rule 108 (array_braces_list)

    array_braces_list  go to state 53


State 27

   14 function_decl: VOID ID . MK_LPAREN parameter_list MK_RPAREN
   15              | VOID ID . MK_LPAREN MK_RPAREN
   18 function_def: VOID ID . MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   19             | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE

    MK_LPAREN  shift, and go to state 54


State 28

   67 id: ID .
   68   | ID . array_braces array_braces_list
   69   | ID . blank_array_braces array_braces_list

    MK_LB  shift, and go to state 23

    $default  reduce using rule 67 (id)

    array_braces        go to state 25
    blank_array_braces  go to state 26


State 29

   21 struct_or_union_decl: STRUCT MK_LBRACE . struct_material_list MK_RBRACE struct_members
   23                     | STRUCT MK_LBRACE . struct_material_list MK_RBRACE

    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 29 (struct_material_list)

    struct_or_union_decl  go to state 55
    struct_material_list  go to state 56
    horz_decl_init_list   go to state 57
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58


State 30

   20 struct_or_union_decl: STRUCT id . MK_LBRACE struct_material_list MK_RBRACE struct_members
   22                     | STRUCT id . MK_LBRACE struct_material_list MK_RBRACE
   24                     | STRUCT id . struct_members
   25                     | STRUCT id . MK_LBRACE error MK_RBRACE struct_members
   26                     | STRUCT id . MK_LBRACE error MK_RBRACE

    ID         shift, and go to state 28
    MK_LBRACE  shift, and go to state 59

    struct_members  go to state 60
    derived_id      go to state 61
    id              go to state 16


State 31

    5 global_decl: function_decl MK_SEMICOLON .

    $default  reduce using rule 5 (global_decl)


State 32

   10 global_decl: struct_or_union_decl MK_SEMICOLON .

    $default  reduce using rule 10 (global_decl)


State 33

    8 global_decl: horz_init_list MK_SEMICOLON .

    $default  reduce using rule 8 (global_decl)


State 34

   11 global_decl: derived_id error . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 62


State 35

   78 hard_assignment: OP_ASSIGN . function_call
   79                | OP_ASSIGN . expression_ll_with_id

    ID         shift, and go to state 5
    CONST      shift, and go to state 63
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    derived_id             go to state 78
    id                     go to state 16
    expression_list_list   go to state 79
    expression_ll_with_id  go to state 80
    expression_list        go to state 81
    expression             go to state 82
    function_call          go to state 83
    sign                   go to state 84
    arithmetic_units       go to state 85
    binary_units           go to state 86


State 36

   64 horz_init_list: derived_id hard_assignment .

    $default  reduce using rule 64 (horz_init_list)


State 37

   65 derived_id: id MK_DOT . id

    ID  shift, and go to state 28

    id  go to state 87


State 38

    7 global_decl: horz_decl_init_list MK_SEMICOLON .

    $default  reduce using rule 7 (global_decl)


State 39

    9 global_decl: function_call MK_SEMICOLON .

    $default  reduce using rule 9 (global_decl)


State 40

   74 more_horz_param_list: MK_COMMA . ID hard_assignment more_horz_param_list
   75                     | MK_COMMA . ID hard_assignment
   76                     | MK_COMMA . ID
   77                     | MK_COMMA . ID more_horz_param_list

    ID  shift, and go to state 88


State 41

   73 horz_decl_init_list: parameter_decl more_horz_param_list .

    $default  reduce using rule 73 (horz_decl_init_list)


State 42

   70 horz_decl_init_list: parameter_decl hard_assignment . more_horz_param_list
   71                    | parameter_decl hard_assignment .

    MK_COMMA  shift, and go to state 40

    $default  reduce using rule 71 (horz_decl_init_list)

    more_horz_param_list  go to state 89


State 43

   12 function_decl: type ID . MK_LPAREN parameter_list MK_RPAREN
   13              | type ID . MK_LPAREN MK_RPAREN
   16 function_def: type ID . MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   17             | type ID . MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE
  104 variable_decl: type ID .
  105 array_decl: type ID . array_braces array_braces_list
  106           | type ID . blank_array_braces array_braces_list

    MK_LB      shift, and go to state 23
    MK_LPAREN  shift, and go to state 90

    $default  reduce using rule 104 (variable_decl)

    array_braces        go to state 91
    blank_array_braces  go to state 92


State 44

  110 array_braces: MK_LB ID . MK_RB

    MK_RB  shift, and go to state 93


State 45

  109 array_braces: MK_LB CONST . MK_RB

    MK_RB  shift, and go to state 94


State 46

  111 blank_array_braces: MK_LB MK_RB .

    $default  reduce using rule 111 (blank_array_braces)


State 47

   99 argument: CONST .

    $default  reduce using rule 99 (argument)


State 48

   94 function_call: ID MK_LPAREN MK_RPAREN .

    $default  reduce using rule 94 (function_call)


State 49

   98 argument: id .

    $default  reduce using rule 98 (argument)


State 50

   95 function_call: ID MK_LPAREN argument_list . MK_RPAREN
   97 argument_list: argument_list . MK_COMMA argument

    MK_RPAREN  shift, and go to state 95
    MK_COMMA   shift, and go to state 96


State 51

   96 argument_list: argument .

    $default  reduce using rule 96 (argument_list)


State 52

   68 id: ID array_braces array_braces_list .
  107 array_braces_list: array_braces_list . array_braces

    MK_LB  shift, and go to state 97

    $default  reduce using rule 68 (id)

    array_braces  go to state 98


State 53

   69 id: ID blank_array_braces array_braces_list .
  107 array_braces_list: array_braces_list . array_braces

    MK_LB  shift, and go to state 97

    $default  reduce using rule 69 (id)

    array_braces  go to state 98


State 54

   14 function_decl: VOID ID MK_LPAREN . parameter_list MK_RPAREN
   15              | VOID ID MK_LPAREN . MK_RPAREN
   18 function_def: VOID ID MK_LPAREN . parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   19             | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE function_body MK_RBRACE

    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    MK_RPAREN  shift, and go to state 99

    parameter_list  go to state 100
    parameter_decl  go to state 101
    variable_decl   go to state 20
    array_decl      go to state 21
    type            go to state 58


State 55

   27 struct_material_list: struct_or_union_decl . MK_SEMICOLON struct_material_list

    MK_SEMICOLON  shift, and go to state 102


State 56

   21 struct_or_union_decl: STRUCT MK_LBRACE struct_material_list . MK_RBRACE struct_members
   23                     | STRUCT MK_LBRACE struct_material_list . MK_RBRACE

    MK_RBRACE  shift, and go to state 103


State 57

   28 struct_material_list: horz_decl_init_list . MK_SEMICOLON struct_material_list

    MK_SEMICOLON  shift, and go to state 104


State 58

  104 variable_decl: type . ID
  105 array_decl: type . ID array_braces array_braces_list
  106           | type . ID blank_array_braces array_braces_list

    ID  shift, and go to state 105


State 59

   20 struct_or_union_decl: STRUCT id MK_LBRACE . struct_material_list MK_RBRACE struct_members
   22                     | STRUCT id MK_LBRACE . struct_material_list MK_RBRACE
   25                     | STRUCT id MK_LBRACE . error MK_RBRACE struct_members
   26                     | STRUCT id MK_LBRACE . error MK_RBRACE

    error   shift, and go to state 106
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    STRUCT  shift, and go to state 9

    MK_RBRACE  reduce using rule 29 (struct_material_list)

    struct_or_union_decl  go to state 55
    struct_material_list  go to state 107
    horz_decl_init_list   go to state 57
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58


State 60

   24 struct_or_union_decl: STRUCT id struct_members .

    $default  reduce using rule 24 (struct_or_union_decl)


State 61

   30 struct_members: derived_id . MK_COMMA struct_members
   31               | derived_id .

    MK_COMMA  shift, and go to state 108

    $default  reduce using rule 31 (struct_members)


State 62

   11 global_decl: derived_id error MK_SEMICOLON .

    $default  reduce using rule 11 (global_decl)


State 63

   80 expression_list_list: CONST .
   81                     | CONST . expression_list

    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    $default  reduce using rule 80 (expression_list_list)

    expression_list   go to state 109
    expression        go to state 82
    sign              go to state 84
    arithmetic_units  go to state 85
    binary_units      go to state 86


State 64

  121 binary_units: OP_OR .

    $default  reduce using rule 121 (binary_units)


State 65

  122 binary_units: OP_AND .

    $default  reduce using rule 122 (binary_units)


State 66

  116 sign: OP_NOT .

    $default  reduce using rule 116 (sign)


State 67

  123 binary_units: OP_EQ .

    $default  reduce using rule 123 (binary_units)


State 68

  124 binary_units: OP_NE .

    $default  reduce using rule 124 (binary_units)


State 69

  126 binary_units: OP_GT .

    $default  reduce using rule 126 (binary_units)


State 70

  125 binary_units: OP_LT .

    $default  reduce using rule 125 (binary_units)


State 71

  128 binary_units: OP_GE .

    $default  reduce using rule 128 (binary_units)


State 72

  127 binary_units: OP_LE .

    $default  reduce using rule 127 (binary_units)


State 73

  114 sign: OP_PLUS .

    $default  reduce using rule 114 (sign)


State 74

  115 sign: OP_MINUS .

    $default  reduce using rule 115 (sign)


State 75

  118 arithmetic_units: OP_TIMES .

    $default  reduce using rule 118 (arithmetic_units)


State 76

  119 arithmetic_units: OP_DIVIDE .

    $default  reduce using rule 119 (arithmetic_units)


State 77

   91 expression: MK_LPAREN . expression_ll_with_id MK_RPAREN

    ID         shift, and go to state 28
    CONST      shift, and go to state 63
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    derived_id             go to state 78
    id                     go to state 16
    expression_list_list   go to state 79
    expression_ll_with_id  go to state 110
    expression_list        go to state 81
    expression             go to state 82
    sign                   go to state 84
    arithmetic_units       go to state 85
    binary_units           go to state 86


State 78

   82 expression_list_list: derived_id . expression_list
   85 expression_ll_with_id: derived_id .

    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    $default  reduce using rule 85 (expression_ll_with_id)

    expression_list   go to state 111
    expression        go to state 82
    sign              go to state 84
    arithmetic_units  go to state 85
    binary_units      go to state 86


State 79

   84 expression_ll_with_id: expression_list_list .

    $default  reduce using rule 84 (expression_ll_with_id)


State 80

   79 hard_assignment: OP_ASSIGN expression_ll_with_id .

    $default  reduce using rule 79 (hard_assignment)


State 81

   83 expression_list_list: expression_list .

    $default  reduce using rule 83 (expression_list_list)


State 82

   86 expression_list: expression . expression_list
   87                | expression .

    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    $default  reduce using rule 87 (expression_list)

    expression_list   go to state 112
    expression        go to state 82
    sign              go to state 84
    arithmetic_units  go to state 85
    binary_units      go to state 86


State 83

   78 hard_assignment: OP_ASSIGN function_call .

    $default  reduce using rule 78 (hard_assignment)


State 84

  117 arithmetic_units: sign .

    $default  reduce using rule 117 (arithmetic_units)


State 85

   88 expression: arithmetic_units . primary
   89           | arithmetic_units .
   90           | arithmetic_units . MK_LPAREN expression_ll_with_id MK_RPAREN

    ID         shift, and go to state 28
    CONST      shift, and go to state 113
    MK_LPAREN  shift, and go to state 114

    $default  reduce using rule 89 (expression)

    id       go to state 115
    primary  go to state 116


State 86

  120 arithmetic_units: binary_units .

    $default  reduce using rule 120 (arithmetic_units)


State 87

   65 derived_id: id MK_DOT id .

    $default  reduce using rule 65 (derived_id)


State 88

   74 more_horz_param_list: MK_COMMA ID . hard_assignment more_horz_param_list
   75                     | MK_COMMA ID . hard_assignment
   76                     | MK_COMMA ID .
   77                     | MK_COMMA ID . more_horz_param_list

    OP_ASSIGN  shift, and go to state 35
    MK_COMMA   shift, and go to state 40

    $default  reduce using rule 76 (more_horz_param_list)

    more_horz_param_list  go to state 117
    hard_assignment       go to state 118


State 89

   70 horz_decl_init_list: parameter_decl hard_assignment more_horz_param_list .

    $default  reduce using rule 70 (horz_decl_init_list)


State 90

   12 function_decl: type ID MK_LPAREN . parameter_list MK_RPAREN
   13              | type ID MK_LPAREN . MK_RPAREN
   16 function_def: type ID MK_LPAREN . parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE
   17             | type ID MK_LPAREN . MK_RPAREN MK_LBRACE function_body MK_RBRACE

    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    MK_RPAREN  shift, and go to state 119

    parameter_list  go to state 120
    parameter_decl  go to state 101
    variable_decl   go to state 20
    array_decl      go to state 21
    type            go to state 58


State 91

  105 array_decl: type ID array_braces . array_braces_list

    $default  reduce using rule 108 (array_braces_list)

    array_braces_list  go to state 121


State 92

  106 array_decl: type ID blank_array_braces . array_braces_list

    $default  reduce using rule 108 (array_braces_list)

    array_braces_list  go to state 122


State 93

  110 array_braces: MK_LB ID MK_RB .

    $default  reduce using rule 110 (array_braces)


State 94

  109 array_braces: MK_LB CONST MK_RB .

    $default  reduce using rule 109 (array_braces)


State 95

   95 function_call: ID MK_LPAREN argument_list MK_RPAREN .

    $default  reduce using rule 95 (function_call)


State 96

   97 argument_list: argument_list MK_COMMA . argument

    ID     shift, and go to state 28
    CONST  shift, and go to state 47

    id        go to state 49
    argument  go to state 123


State 97

  109 array_braces: MK_LB . CONST MK_RB
  110             | MK_LB . ID MK_RB

    ID     shift, and go to state 44
    CONST  shift, and go to state 45


State 98

  107 array_braces_list: array_braces_list array_braces .

    $default  reduce using rule 107 (array_braces_list)


State 99

   15 function_decl: VOID ID MK_LPAREN MK_RPAREN .
   19 function_def: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE function_body MK_RBRACE

    MK_LBRACE  shift, and go to state 124

    $default  reduce using rule 15 (function_decl)


State 100

   14 function_decl: VOID ID MK_LPAREN parameter_list . MK_RPAREN
   18 function_def: VOID ID MK_LPAREN parameter_list . MK_RPAREN MK_LBRACE function_body MK_RBRACE
  101 parameter_list: parameter_list . MK_COMMA parameter_decl

    MK_RPAREN  shift, and go to state 125
    MK_COMMA   shift, and go to state 126


State 101

  100 parameter_list: parameter_decl .

    $default  reduce using rule 100 (parameter_list)


State 102

   27 struct_material_list: struct_or_union_decl MK_SEMICOLON . struct_material_list

    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 29 (struct_material_list)

    struct_or_union_decl  go to state 55
    struct_material_list  go to state 127
    horz_decl_init_list   go to state 57
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58


State 103

   21 struct_or_union_decl: STRUCT MK_LBRACE struct_material_list MK_RBRACE . struct_members
   23                     | STRUCT MK_LBRACE struct_material_list MK_RBRACE .

    ID  shift, and go to state 28

    $default  reduce using rule 23 (struct_or_union_decl)

    struct_members  go to state 128
    derived_id      go to state 61
    id              go to state 16


State 104

   28 struct_material_list: horz_decl_init_list MK_SEMICOLON . struct_material_list

    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 29 (struct_material_list)

    struct_or_union_decl  go to state 55
    struct_material_list  go to state 129
    horz_decl_init_list   go to state 57
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58


State 105

  104 variable_decl: type ID .
  105 array_decl: type ID . array_braces array_braces_list
  106           | type ID . blank_array_braces array_braces_list

    MK_LB  shift, and go to state 23

    $default  reduce using rule 104 (variable_decl)

    array_braces        go to state 91
    blank_array_braces  go to state 92


State 106

   25 struct_or_union_decl: STRUCT id MK_LBRACE error . MK_RBRACE struct_members
   26                     | STRUCT id MK_LBRACE error . MK_RBRACE

    MK_RBRACE  shift, and go to state 130


State 107

   20 struct_or_union_decl: STRUCT id MK_LBRACE struct_material_list . MK_RBRACE struct_members
   22                     | STRUCT id MK_LBRACE struct_material_list . MK_RBRACE

    MK_RBRACE  shift, and go to state 131


State 108

   30 struct_members: derived_id MK_COMMA . struct_members

    ID  shift, and go to state 28

    struct_members  go to state 132
    derived_id      go to state 61
    id              go to state 16


State 109

   81 expression_list_list: CONST expression_list .

    $default  reduce using rule 81 (expression_list_list)


State 110

   91 expression: MK_LPAREN expression_ll_with_id . MK_RPAREN

    MK_RPAREN  shift, and go to state 133


State 111

   82 expression_list_list: derived_id expression_list .

    $default  reduce using rule 82 (expression_list_list)


State 112

   86 expression_list: expression expression_list .

    $default  reduce using rule 86 (expression_list)


State 113

   93 primary: CONST .

    $default  reduce using rule 93 (primary)


State 114

   90 expression: arithmetic_units MK_LPAREN . expression_ll_with_id MK_RPAREN

    ID         shift, and go to state 28
    CONST      shift, and go to state 63
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    derived_id             go to state 78
    id                     go to state 16
    expression_list_list   go to state 79
    expression_ll_with_id  go to state 134
    expression_list        go to state 81
    expression             go to state 82
    sign                   go to state 84
    arithmetic_units       go to state 85
    binary_units           go to state 86


State 115

   92 primary: id .

    $default  reduce using rule 92 (primary)


State 116

   88 expression: arithmetic_units primary .

    $default  reduce using rule 88 (expression)


State 117

   77 more_horz_param_list: MK_COMMA ID more_horz_param_list .

    $default  reduce using rule 77 (more_horz_param_list)


State 118

   74 more_horz_param_list: MK_COMMA ID hard_assignment . more_horz_param_list
   75                     | MK_COMMA ID hard_assignment .

    MK_COMMA  shift, and go to state 40

    $default  reduce using rule 75 (more_horz_param_list)

    more_horz_param_list  go to state 135


State 119

   13 function_decl: type ID MK_LPAREN MK_RPAREN .
   17 function_def: type ID MK_LPAREN MK_RPAREN . MK_LBRACE function_body MK_RBRACE

    MK_LBRACE  shift, and go to state 136

    $default  reduce using rule 13 (function_decl)


State 120

   12 function_decl: type ID MK_LPAREN parameter_list . MK_RPAREN
   16 function_def: type ID MK_LPAREN parameter_list . MK_RPAREN MK_LBRACE function_body MK_RBRACE
  101 parameter_list: parameter_list . MK_COMMA parameter_decl

    MK_RPAREN  shift, and go to state 137
    MK_COMMA   shift, and go to state 126


State 121

  105 array_decl: type ID array_braces array_braces_list .
  107 array_braces_list: array_braces_list . array_braces

    MK_LB  shift, and go to state 97

    $default  reduce using rule 105 (array_decl)

    array_braces  go to state 98


State 122

  106 array_decl: type ID blank_array_braces array_braces_list .
  107 array_braces_list: array_braces_list . array_braces

    MK_LB  shift, and go to state 97

    $default  reduce using rule 106 (array_decl)

    array_braces  go to state 98


State 123

   97 argument_list: argument_list MK_COMMA argument .

    $default  reduce using rule 97 (argument_list)


State 124

   19 function_def: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 138
    statement_list  go to state 139


State 125

   14 function_decl: VOID ID MK_LPAREN parameter_list MK_RPAREN .
   18 function_def: VOID ID MK_LPAREN parameter_list MK_RPAREN . MK_LBRACE function_body MK_RBRACE

    MK_LBRACE  shift, and go to state 140

    $default  reduce using rule 14 (function_decl)


State 126

  101 parameter_list: parameter_list MK_COMMA . parameter_decl

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    parameter_decl  go to state 141
    variable_decl   go to state 20
    array_decl      go to state 21
    type            go to state 58


State 127

   27 struct_material_list: struct_or_union_decl MK_SEMICOLON struct_material_list .

    $default  reduce using rule 27 (struct_material_list)


State 128

   21 struct_or_union_decl: STRUCT MK_LBRACE struct_material_list MK_RBRACE struct_members .

    $default  reduce using rule 21 (struct_or_union_decl)


State 129

   28 struct_material_list: horz_decl_init_list MK_SEMICOLON struct_material_list .

    $default  reduce using rule 28 (struct_material_list)


State 130

   25 struct_or_union_decl: STRUCT id MK_LBRACE error MK_RBRACE . struct_members
   26                     | STRUCT id MK_LBRACE error MK_RBRACE .

    ID  shift, and go to state 28

    $default  reduce using rule 26 (struct_or_union_decl)

    struct_members  go to state 142
    derived_id      go to state 61
    id              go to state 16


State 131

   20 struct_or_union_decl: STRUCT id MK_LBRACE struct_material_list MK_RBRACE . struct_members
   22                     | STRUCT id MK_LBRACE struct_material_list MK_RBRACE .

    ID  shift, and go to state 28

    $default  reduce using rule 22 (struct_or_union_decl)

    struct_members  go to state 143
    derived_id      go to state 61
    id              go to state 16


State 132

   30 struct_members: derived_id MK_COMMA struct_members .

    $default  reduce using rule 30 (struct_members)


State 133

   91 expression: MK_LPAREN expression_ll_with_id MK_RPAREN .

    $default  reduce using rule 91 (expression)


State 134

   90 expression: arithmetic_units MK_LPAREN expression_ll_with_id . MK_RPAREN

    MK_RPAREN  shift, and go to state 144


State 135

   74 more_horz_param_list: MK_COMMA ID hard_assignment more_horz_param_list .

    $default  reduce using rule 74 (more_horz_param_list)


State 136

   17 function_def: type ID MK_LPAREN MK_RPAREN MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 145
    statement_list  go to state 139


State 137

   12 function_decl: type ID MK_LPAREN parameter_list MK_RPAREN .
   16 function_def: type ID MK_LPAREN parameter_list MK_RPAREN . MK_LBRACE function_body MK_RBRACE

    MK_LBRACE  shift, and go to state 146

    $default  reduce using rule 12 (function_decl)


State 138

   19 function_def: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 147


State 139

   32 function_body: statement_list .
   33 statement_list: statement_list . statement

    ID            shift, and go to state 5
    CONST         shift, and go to state 63
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 148
    WHILE         shift, and go to state 149
    FOR           shift, and go to state 150
    STRUCT        shift, and go to state 9
    OP_OR         shift, and go to state 64
    OP_AND        shift, and go to state 65
    OP_NOT        shift, and go to state 66
    OP_EQ         shift, and go to state 67
    OP_NE         shift, and go to state 68
    OP_GT         shift, and go to state 69
    OP_LT         shift, and go to state 70
    OP_GE         shift, and go to state 71
    OP_LE         shift, and go to state 72
    OP_PLUS       shift, and go to state 73
    OP_MINUS      shift, and go to state 74
    OP_TIMES      shift, and go to state 75
    OP_DIVIDE     shift, and go to state 76
    MK_LPAREN     shift, and go to state 77
    MK_SEMICOLON  shift, and go to state 151
    RETURN        shift, and go to state 152

    $default  reduce using rule 32 (function_body)

    struct_or_union_decl  go to state 153
    statement             go to state 154
    control_flow          go to state 155
    control_arguments     go to state 156
    return_statement      go to state 157
    horz_init_list        go to state 158
    derived_id            go to state 159
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    function_call         go to state 162
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 140

   18 function_def: VOID ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 163
    statement_list  go to state 139


State 141

  101 parameter_list: parameter_list MK_COMMA parameter_decl .

    $default  reduce using rule 101 (parameter_list)


State 142

   25 struct_or_union_decl: STRUCT id MK_LBRACE error MK_RBRACE struct_members .

    $default  reduce using rule 25 (struct_or_union_decl)


State 143

   20 struct_or_union_decl: STRUCT id MK_LBRACE struct_material_list MK_RBRACE struct_members .

    $default  reduce using rule 20 (struct_or_union_decl)


State 144

   90 expression: arithmetic_units MK_LPAREN expression_ll_with_id MK_RPAREN .

    $default  reduce using rule 90 (expression)


State 145

   17 function_def: type ID MK_LPAREN MK_RPAREN MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 164


State 146

   16 function_def: type ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 165
    statement_list  go to state 139


State 147

   19 function_def: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 19 (function_def)


State 148

   45 control_flow: IF . MK_LPAREN control_arguments MK_RPAREN statement
   46             | IF . MK_LPAREN control_arguments MK_RPAREN statement ELSE statement
   47             | IF . MK_LPAREN control_arguments MK_RPAREN statement ELSE MK_LBRACE function_body MK_RBRACE
   48             | IF . MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   49             | IF . MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE statement
   50             | IF . MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE
   53             | IF . MK_LPAREN error MK_RBRACE

    MK_LPAREN  shift, and go to state 166


State 149

   43 control_flow: WHILE . MK_LPAREN control_arguments MK_RPAREN statement
   44             | WHILE . MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   55             | WHILE . MK_LPAREN error MK_RBRACE

    MK_LPAREN  shift, and go to state 167


State 150

   51 control_flow: FOR . MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN statement
   52             | FOR . MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   54             | FOR . MK_LPAREN error MK_RBRACE

    MK_LPAREN  shift, and go to state 168


State 151

   40 statement: MK_SEMICOLON .

    $default  reduce using rule 40 (statement)


State 152

   59 return_statement: RETURN . sign CONST
   60                 | RETURN . CONST
   61                 | RETURN . sign id
   62                 | RETURN . id
   63                 | RETURN .

    ID        shift, and go to state 28
    CONST     shift, and go to state 169
    OP_NOT    shift, and go to state 66
    OP_PLUS   shift, and go to state 73
    OP_MINUS  shift, and go to state 74

    $default  reduce using rule 63 (return_statement)

    id    go to state 170
    sign  go to state 171


State 153

   39 statement: struct_or_union_decl . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 172


State 154

   33 statement_list: statement_list statement .

    $default  reduce using rule 33 (statement_list)


State 155

   37 statement: control_flow .

    $default  reduce using rule 37 (statement)


State 156

   38 statement: control_arguments . MK_SEMICOLON
   42          | control_arguments . error MK_SEMICOLON

    error         shift, and go to state 173
    MK_SEMICOLON  shift, and go to state 174


State 157

   35 statement: return_statement . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 175


State 158

   57 control_arguments: horz_init_list .

    $default  reduce using rule 57 (control_arguments)


State 159

   41 statement: derived_id . error MK_SEMICOLON
   64 horz_init_list: derived_id . hard_assignment
   82 expression_list_list: derived_id . expression_list

    error      shift, and go to state 176
    OP_ASSIGN  shift, and go to state 35
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    hard_assignment   go to state 36
    expression_list   go to state 111
    expression        go to state 82
    sign              go to state 84
    arithmetic_units  go to state 85
    binary_units      go to state 86


State 160

   58 control_arguments: horz_decl_init_list .

    $default  reduce using rule 58 (control_arguments)


State 161

   56 control_arguments: expression_list_list .

    $default  reduce using rule 56 (control_arguments)


State 162

   36 statement: function_call . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 177


State 163

   18 function_def: VOID ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 178


State 164

   17 function_def: type ID MK_LPAREN MK_RPAREN MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 17 (function_def)


State 165

   16 function_def: type ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 179


State 166

   45 control_flow: IF MK_LPAREN . control_arguments MK_RPAREN statement
   46             | IF MK_LPAREN . control_arguments MK_RPAREN statement ELSE statement
   47             | IF MK_LPAREN . control_arguments MK_RPAREN statement ELSE MK_LBRACE function_body MK_RBRACE
   48             | IF MK_LPAREN . control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   49             | IF MK_LPAREN . control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE statement
   50             | IF MK_LPAREN . control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE
   53             | IF MK_LPAREN . error MK_RBRACE

    error      shift, and go to state 180
    ID         shift, and go to state 28
    CONST      shift, and go to state 63
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    control_arguments     go to state 181
    horz_init_list        go to state 158
    derived_id            go to state 182
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 167

   43 control_flow: WHILE MK_LPAREN . control_arguments MK_RPAREN statement
   44             | WHILE MK_LPAREN . control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   55             | WHILE MK_LPAREN . error MK_RBRACE

    error      shift, and go to state 183
    ID         shift, and go to state 28
    CONST      shift, and go to state 63
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    control_arguments     go to state 184
    horz_init_list        go to state 158
    derived_id            go to state 182
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 168

   51 control_flow: FOR MK_LPAREN . control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN statement
   52             | FOR MK_LPAREN . control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE
   54             | FOR MK_LPAREN . error MK_RBRACE

    error      shift, and go to state 185
    ID         shift, and go to state 28
    CONST      shift, and go to state 63
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    control_arguments     go to state 186
    horz_init_list        go to state 158
    derived_id            go to state 182
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 169

   60 return_statement: RETURN CONST .

    $default  reduce using rule 60 (return_statement)


State 170

   62 return_statement: RETURN id .

    $default  reduce using rule 62 (return_statement)


State 171

   59 return_statement: RETURN sign . CONST
   61                 | RETURN sign . id

    ID     shift, and go to state 28
    CONST  shift, and go to state 187

    id  go to state 188


State 172

   39 statement: struct_or_union_decl MK_SEMICOLON .

    $default  reduce using rule 39 (statement)


State 173

   42 statement: control_arguments error . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 189


State 174

   38 statement: control_arguments MK_SEMICOLON .

    $default  reduce using rule 38 (statement)


State 175

   35 statement: return_statement MK_SEMICOLON .

    $default  reduce using rule 35 (statement)


State 176

   41 statement: derived_id error . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 190


State 177

   36 statement: function_call MK_SEMICOLON .

    $default  reduce using rule 36 (statement)


State 178

   18 function_def: VOID ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 18 (function_def)


State 179

   16 function_def: type ID MK_LPAREN parameter_list MK_RPAREN MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 16 (function_def)


State 180

   53 control_flow: IF MK_LPAREN error . MK_RBRACE

    MK_RBRACE  shift, and go to state 191


State 181

   45 control_flow: IF MK_LPAREN control_arguments . MK_RPAREN statement
   46             | IF MK_LPAREN control_arguments . MK_RPAREN statement ELSE statement
   47             | IF MK_LPAREN control_arguments . MK_RPAREN statement ELSE MK_LBRACE function_body MK_RBRACE
   48             | IF MK_LPAREN control_arguments . MK_RPAREN MK_LBRACE function_body MK_RBRACE
   49             | IF MK_LPAREN control_arguments . MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE statement
   50             | IF MK_LPAREN control_arguments . MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE

    MK_RPAREN  shift, and go to state 192


State 182

   64 horz_init_list: derived_id . hard_assignment
   82 expression_list_list: derived_id . expression_list

    OP_ASSIGN  shift, and go to state 35
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    hard_assignment   go to state 36
    expression_list   go to state 111
    expression        go to state 82
    sign              go to state 84
    arithmetic_units  go to state 85
    binary_units      go to state 86


State 183

   55 control_flow: WHILE MK_LPAREN error . MK_RBRACE

    MK_RBRACE  shift, and go to state 193


State 184

   43 control_flow: WHILE MK_LPAREN control_arguments . MK_RPAREN statement
   44             | WHILE MK_LPAREN control_arguments . MK_RPAREN MK_LBRACE function_body MK_RBRACE

    MK_RPAREN  shift, and go to state 194


State 185

   54 control_flow: FOR MK_LPAREN error . MK_RBRACE

    MK_RBRACE  shift, and go to state 195


State 186

   51 control_flow: FOR MK_LPAREN control_arguments . MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN statement
   52             | FOR MK_LPAREN control_arguments . MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE

    MK_SEMICOLON  shift, and go to state 196


State 187

   59 return_statement: RETURN sign CONST .

    $default  reduce using rule 59 (return_statement)


State 188

   61 return_statement: RETURN sign id .

    $default  reduce using rule 61 (return_statement)


State 189

   42 statement: control_arguments error MK_SEMICOLON .

    $default  reduce using rule 42 (statement)


State 190

   41 statement: derived_id error MK_SEMICOLON .

    $default  reduce using rule 41 (statement)


State 191

   53 control_flow: IF MK_LPAREN error MK_RBRACE .

    $default  reduce using rule 53 (control_flow)


State 192

   45 control_flow: IF MK_LPAREN control_arguments MK_RPAREN . statement
   46             | IF MK_LPAREN control_arguments MK_RPAREN . statement ELSE statement
   47             | IF MK_LPAREN control_arguments MK_RPAREN . statement ELSE MK_LBRACE function_body MK_RBRACE
   48             | IF MK_LPAREN control_arguments MK_RPAREN . MK_LBRACE function_body MK_RBRACE
   49             | IF MK_LPAREN control_arguments MK_RPAREN . MK_LBRACE function_body MK_RBRACE ELSE statement
   50             | IF MK_LPAREN control_arguments MK_RPAREN . MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE

    ID            shift, and go to state 5
    CONST         shift, and go to state 63
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 148
    WHILE         shift, and go to state 149
    FOR           shift, and go to state 150
    STRUCT        shift, and go to state 9
    OP_OR         shift, and go to state 64
    OP_AND        shift, and go to state 65
    OP_NOT        shift, and go to state 66
    OP_EQ         shift, and go to state 67
    OP_NE         shift, and go to state 68
    OP_GT         shift, and go to state 69
    OP_LT         shift, and go to state 70
    OP_GE         shift, and go to state 71
    OP_LE         shift, and go to state 72
    OP_PLUS       shift, and go to state 73
    OP_MINUS      shift, and go to state 74
    OP_TIMES      shift, and go to state 75
    OP_DIVIDE     shift, and go to state 76
    MK_LPAREN     shift, and go to state 77
    MK_LBRACE     shift, and go to state 197
    MK_SEMICOLON  shift, and go to state 151
    RETURN        shift, and go to state 152

    struct_or_union_decl  go to state 153
    statement             go to state 198
    control_flow          go to state 155
    control_arguments     go to state 156
    return_statement      go to state 157
    horz_init_list        go to state 158
    derived_id            go to state 159
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    function_call         go to state 162
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 193

   55 control_flow: WHILE MK_LPAREN error MK_RBRACE .

    $default  reduce using rule 55 (control_flow)


State 194

   43 control_flow: WHILE MK_LPAREN control_arguments MK_RPAREN . statement
   44             | WHILE MK_LPAREN control_arguments MK_RPAREN . MK_LBRACE function_body MK_RBRACE

    ID            shift, and go to state 5
    CONST         shift, and go to state 63
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 148
    WHILE         shift, and go to state 149
    FOR           shift, and go to state 150
    STRUCT        shift, and go to state 9
    OP_OR         shift, and go to state 64
    OP_AND        shift, and go to state 65
    OP_NOT        shift, and go to state 66
    OP_EQ         shift, and go to state 67
    OP_NE         shift, and go to state 68
    OP_GT         shift, and go to state 69
    OP_LT         shift, and go to state 70
    OP_GE         shift, and go to state 71
    OP_LE         shift, and go to state 72
    OP_PLUS       shift, and go to state 73
    OP_MINUS      shift, and go to state 74
    OP_TIMES      shift, and go to state 75
    OP_DIVIDE     shift, and go to state 76
    MK_LPAREN     shift, and go to state 77
    MK_LBRACE     shift, and go to state 199
    MK_SEMICOLON  shift, and go to state 151
    RETURN        shift, and go to state 152

    struct_or_union_decl  go to state 153
    statement             go to state 200
    control_flow          go to state 155
    control_arguments     go to state 156
    return_statement      go to state 157
    horz_init_list        go to state 158
    derived_id            go to state 159
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    function_call         go to state 162
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 195

   54 control_flow: FOR MK_LPAREN error MK_RBRACE .

    $default  reduce using rule 54 (control_flow)


State 196

   51 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON . control_arguments MK_SEMICOLON control_arguments MK_RPAREN statement
   52             | FOR MK_LPAREN control_arguments MK_SEMICOLON . control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE

    ID         shift, and go to state 28
    CONST      shift, and go to state 63
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    control_arguments     go to state 201
    horz_init_list        go to state 158
    derived_id            go to state 182
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 197

   48 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE . function_body MK_RBRACE
   49             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE . function_body MK_RBRACE ELSE statement
   50             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE . function_body MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 202
    statement_list  go to state 139


State 198

   45 control_flow: IF MK_LPAREN control_arguments MK_RPAREN statement .
   46             | IF MK_LPAREN control_arguments MK_RPAREN statement . ELSE statement
   47             | IF MK_LPAREN control_arguments MK_RPAREN statement . ELSE MK_LBRACE function_body MK_RBRACE

    ELSE  shift, and go to state 203

    $default  reduce using rule 45 (control_flow)


State 199

   44 control_flow: WHILE MK_LPAREN control_arguments MK_RPAREN MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 204
    statement_list  go to state 139


State 200

   43 control_flow: WHILE MK_LPAREN control_arguments MK_RPAREN statement .

    $default  reduce using rule 43 (control_flow)


State 201

   51 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments . MK_SEMICOLON control_arguments MK_RPAREN statement
   52             | FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments . MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE

    MK_SEMICOLON  shift, and go to state 205


State 202

   48 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body . MK_RBRACE
   49             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body . MK_RBRACE ELSE statement
   50             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body . MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE

    MK_RBRACE  shift, and go to state 206


State 203

   46 control_flow: IF MK_LPAREN control_arguments MK_RPAREN statement ELSE . statement
   47             | IF MK_LPAREN control_arguments MK_RPAREN statement ELSE . MK_LBRACE function_body MK_RBRACE

    ID            shift, and go to state 5
    CONST         shift, and go to state 63
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 148
    WHILE         shift, and go to state 149
    FOR           shift, and go to state 150
    STRUCT        shift, and go to state 9
    OP_OR         shift, and go to state 64
    OP_AND        shift, and go to state 65
    OP_NOT        shift, and go to state 66
    OP_EQ         shift, and go to state 67
    OP_NE         shift, and go to state 68
    OP_GT         shift, and go to state 69
    OP_LT         shift, and go to state 70
    OP_GE         shift, and go to state 71
    OP_LE         shift, and go to state 72
    OP_PLUS       shift, and go to state 73
    OP_MINUS      shift, and go to state 74
    OP_TIMES      shift, and go to state 75
    OP_DIVIDE     shift, and go to state 76
    MK_LPAREN     shift, and go to state 77
    MK_LBRACE     shift, and go to state 207
    MK_SEMICOLON  shift, and go to state 151
    RETURN        shift, and go to state 152

    struct_or_union_decl  go to state 153
    statement             go to state 208
    control_flow          go to state 155
    control_arguments     go to state 156
    return_statement      go to state 157
    horz_init_list        go to state 158
    derived_id            go to state 159
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    function_call         go to state 162
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 204

   44 control_flow: WHILE MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 209


State 205

   51 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON . control_arguments MK_RPAREN statement
   52             | FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON . control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE

    ID         shift, and go to state 28
    CONST      shift, and go to state 63
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    OP_OR      shift, and go to state 64
    OP_AND     shift, and go to state 65
    OP_NOT     shift, and go to state 66
    OP_EQ      shift, and go to state 67
    OP_NE      shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_LT      shift, and go to state 70
    OP_GE      shift, and go to state 71
    OP_LE      shift, and go to state 72
    OP_PLUS    shift, and go to state 73
    OP_MINUS   shift, and go to state 74
    OP_TIMES   shift, and go to state 75
    OP_DIVIDE  shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    control_arguments     go to state 210
    horz_init_list        go to state 158
    derived_id            go to state 182
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 206

   48 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE .
   49             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE . ELSE statement
   50             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE . ELSE MK_LBRACE function_body MK_RBRACE

    ELSE  shift, and go to state 211

    $default  reduce using rule 48 (control_flow)


State 207

   47 control_flow: IF MK_LPAREN control_arguments MK_RPAREN statement ELSE MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 212
    statement_list  go to state 139


State 208

   46 control_flow: IF MK_LPAREN control_arguments MK_RPAREN statement ELSE statement .

    $default  reduce using rule 46 (control_flow)


State 209

   44 control_flow: WHILE MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 44 (control_flow)


State 210

   51 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments . MK_RPAREN statement
   52             | FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments . MK_RPAREN MK_LBRACE function_body MK_RBRACE

    MK_RPAREN  shift, and go to state 213


State 211

   49 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE . statement
   50             | IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE . MK_LBRACE function_body MK_RBRACE

    ID            shift, and go to state 5
    CONST         shift, and go to state 63
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 148
    WHILE         shift, and go to state 149
    FOR           shift, and go to state 150
    STRUCT        shift, and go to state 9
    OP_OR         shift, and go to state 64
    OP_AND        shift, and go to state 65
    OP_NOT        shift, and go to state 66
    OP_EQ         shift, and go to state 67
    OP_NE         shift, and go to state 68
    OP_GT         shift, and go to state 69
    OP_LT         shift, and go to state 70
    OP_GE         shift, and go to state 71
    OP_LE         shift, and go to state 72
    OP_PLUS       shift, and go to state 73
    OP_MINUS      shift, and go to state 74
    OP_TIMES      shift, and go to state 75
    OP_DIVIDE     shift, and go to state 76
    MK_LPAREN     shift, and go to state 77
    MK_LBRACE     shift, and go to state 214
    MK_SEMICOLON  shift, and go to state 151
    RETURN        shift, and go to state 152

    struct_or_union_decl  go to state 153
    statement             go to state 215
    control_flow          go to state 155
    control_arguments     go to state 156
    return_statement      go to state 157
    horz_init_list        go to state 158
    derived_id            go to state 159
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    function_call         go to state 162
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 212

   47 control_flow: IF MK_LPAREN control_arguments MK_RPAREN statement ELSE MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 216


State 213

   51 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN . statement
   52             | FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN . MK_LBRACE function_body MK_RBRACE

    ID            shift, and go to state 5
    CONST         shift, and go to state 63
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 148
    WHILE         shift, and go to state 149
    FOR           shift, and go to state 150
    STRUCT        shift, and go to state 9
    OP_OR         shift, and go to state 64
    OP_AND        shift, and go to state 65
    OP_NOT        shift, and go to state 66
    OP_EQ         shift, and go to state 67
    OP_NE         shift, and go to state 68
    OP_GT         shift, and go to state 69
    OP_LT         shift, and go to state 70
    OP_GE         shift, and go to state 71
    OP_LE         shift, and go to state 72
    OP_PLUS       shift, and go to state 73
    OP_MINUS      shift, and go to state 74
    OP_TIMES      shift, and go to state 75
    OP_DIVIDE     shift, and go to state 76
    MK_LPAREN     shift, and go to state 77
    MK_LBRACE     shift, and go to state 217
    MK_SEMICOLON  shift, and go to state 151
    RETURN        shift, and go to state 152

    struct_or_union_decl  go to state 153
    statement             go to state 218
    control_flow          go to state 155
    control_arguments     go to state 156
    return_statement      go to state 157
    horz_init_list        go to state 158
    derived_id            go to state 159
    id                    go to state 16
    horz_decl_init_list   go to state 160
    expression_list_list  go to state 161
    expression_list       go to state 81
    expression            go to state 82
    function_call         go to state 162
    parameter_decl        go to state 19
    variable_decl         go to state 20
    array_decl            go to state 21
    type                  go to state 58
    sign                  go to state 84
    arithmetic_units      go to state 85
    binary_units          go to state 86


State 214

   50 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 219
    statement_list  go to state 139


State 215

   49 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE statement .

    $default  reduce using rule 49 (control_flow)


State 216

   47 control_flow: IF MK_LPAREN control_arguments MK_RPAREN statement ELSE MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 47 (control_flow)


State 217

   52 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE . function_body MK_RBRACE

    $default  reduce using rule 34 (statement_list)

    function_body   go to state 220
    statement_list  go to state 139


State 218

   51 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN statement .

    $default  reduce using rule 51 (control_flow)


State 219

   50 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 221


State 220

   52 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body . MK_RBRACE

    MK_RBRACE  shift, and go to state 222


State 221

   50 control_flow: IF MK_LPAREN control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE ELSE MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 50 (control_flow)


State 222

   52 control_flow: FOR MK_LPAREN control_arguments MK_SEMICOLON control_arguments MK_SEMICOLON control_arguments MK_RPAREN MK_LBRACE function_body MK_RBRACE .

    $default  reduce using rule 52 (control_flow)
